#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLKHACHSAN")]
	public partial class DataKhachSanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMINK(ADMINK instance);
    partial void UpdateADMINK(ADMINK instance);
    partial void DeleteADMINK(ADMINK instance);
    partial void InsertBANGLUONG(BANGLUONG instance);
    partial void UpdateBANGLUONG(BANGLUONG instance);
    partial void DeleteBANGLUONG(BANGLUONG instance);
    partial void InsertCALAM(CALAM instance);
    partial void UpdateCALAM(CALAM instance);
    partial void DeleteCALAM(CALAM instance);
    partial void InsertCHAMCONG(CHAMCONG instance);
    partial void UpdateCHAMCONG(CHAMCONG instance);
    partial void DeleteCHAMCONG(CHAMCONG instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertKHACHSAN(KHACHSAN instance);
    partial void UpdateKHACHSAN(KHACHSAN instance);
    partial void DeleteKHACHSAN(KHACHSAN instance);
    partial void InsertLICHLAMVIEC(LICHLAMVIEC instance);
    partial void UpdateLICHLAMVIEC(LICHLAMVIEC instance);
    partial void DeleteLICHLAMVIEC(LICHLAMVIEC instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertDATPHONG(DATPHONG instance);
    partial void UpdateDATPHONG(DATPHONG instance);
    partial void DeleteDATPHONG(DATPHONG instance);
    #endregion
		
		public DataKhachSanDataContext() : 
				base(global::DAL.Properties.Settings.Default.QLKHACHSANConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataKhachSanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataKhachSanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataKhachSanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataKhachSanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMINK> ADMINKs
		{
			get
			{
				return this.GetTable<ADMINK>();
			}
		}
		
		public System.Data.Linq.Table<BANGLUONG> BANGLUONGs
		{
			get
			{
				return this.GetTable<BANGLUONG>();
			}
		}
		
		public System.Data.Linq.Table<CALAM> CALAMs
		{
			get
			{
				return this.GetTable<CALAM>();
			}
		}
		
		public System.Data.Linq.Table<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this.GetTable<CHAMCONG>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<KHACHSAN> KHACHSANs
		{
			get
			{
				return this.GetTable<KHACHSAN>();
			}
		}
		
		public System.Data.Linq.Table<LICHLAMVIEC> LICHLAMVIECs
		{
			get
			{
				return this.GetTable<LICHLAMVIEC>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<DATPHONG> DATPHONGs
		{
			get
			{
				return this.GetTable<DATPHONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMINKS")]
	public partial class ADMINK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ADMINID;
		
		private string _TEN;
		
		private string _EMAIL;
		
		private string _MATKHAU;
		
		private EntitySet<KHACHSAN> _KHACHSANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnADMINIDChanging(string value);
    partial void OnADMINIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public ADMINK()
		{
			this._KHACHSANs = new EntitySet<KHACHSAN>(new Action<KHACHSAN>(this.attach_KHACHSANs), new Action<KHACHSAN>(this.detach_KHACHSANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADMINID", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ADMINID
		{
			get
			{
				return this._ADMINID;
			}
			set
			{
				if ((this._ADMINID != value))
				{
					this.OnADMINIDChanging(value);
					this.SendPropertyChanging();
					this._ADMINID = value;
					this.SendPropertyChanged("ADMINID");
					this.OnADMINIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(100)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADMINK_KHACHSAN", Storage="_KHACHSANs", ThisKey="ADMINID", OtherKey="ADMINID")]
		public EntitySet<KHACHSAN> KHACHSANs
		{
			get
			{
				return this._KHACHSANs;
			}
			set
			{
				this._KHACHSANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHSANs(KHACHSAN entity)
		{
			this.SendPropertyChanging();
			entity.ADMINK = this;
		}
		
		private void detach_KHACHSANs(KHACHSAN entity)
		{
			this.SendPropertyChanging();
			entity.ADMINK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANGLUONG")]
	public partial class BANGLUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACC;
		
		private string _MANV;
		
		private System.Nullable<double> _TONGLUONG;
		
		private EntityRef<CHAMCONG> _CHAMCONG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACCChanging(string value);
    partial void OnMACCChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTONGLUONGChanging(System.Nullable<double> value);
    partial void OnTONGLUONGChanged();
    #endregion
		
		public BANGLUONG()
		{
			this._CHAMCONG = default(EntityRef<CHAMCONG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACC
		{
			get
			{
				return this._MACC;
			}
			set
			{
				if ((this._MACC != value))
				{
					if (this._CHAMCONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACCChanging(value);
					this.SendPropertyChanging();
					this._MACC = value;
					this.SendPropertyChanged("MACC");
					this.OnMACCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGLUONG", DbType="Float")]
		public System.Nullable<double> TONGLUONG
		{
			get
			{
				return this._TONGLUONG;
			}
			set
			{
				if ((this._TONGLUONG != value))
				{
					this.OnTONGLUONGChanging(value);
					this.SendPropertyChanging();
					this._TONGLUONG = value;
					this.SendPropertyChanged("TONGLUONG");
					this.OnTONGLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHAMCONG_BANGLUONG", Storage="_CHAMCONG", ThisKey="MACC", OtherKey="MACC", IsForeignKey=true)]
		public CHAMCONG CHAMCONG
		{
			get
			{
				return this._CHAMCONG.Entity;
			}
			set
			{
				CHAMCONG previousValue = this._CHAMCONG.Entity;
				if (((previousValue != value) 
							|| (this._CHAMCONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHAMCONG.Entity = null;
						previousValue.BANGLUONGs.Remove(this);
					}
					this._CHAMCONG.Entity = value;
					if ((value != null))
					{
						value.BANGLUONGs.Add(this);
						this._MACC = value.MACC;
					}
					else
					{
						this._MACC = default(string);
					}
					this.SendPropertyChanged("CHAMCONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BANGLUONG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.BANGLUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.BANGLUONGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CALAM")]
	public partial class CALAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALV;
		
		private string _MANV;
		
		private string _CALAM1;
		
		private EntityRef<LICHLAMVIEC> _LICHLAMVIEC;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALVChanging(string value);
    partial void OnMALVChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnCALAM1Changing(string value);
    partial void OnCALAM1Changed();
    #endregion
		
		public CALAM()
		{
			this._LICHLAMVIEC = default(EntityRef<LICHLAMVIEC>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALV
		{
			get
			{
				return this._MALV;
			}
			set
			{
				if ((this._MALV != value))
				{
					if (this._LICHLAMVIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALVChanging(value);
					this.SendPropertyChanging();
					this._MALV = value;
					this.SendPropertyChanged("MALV");
					this.OnMALVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CALAM", Storage="_CALAM1", DbType="NVarChar(50)")]
		public string CALAM1
		{
			get
			{
				return this._CALAM1;
			}
			set
			{
				if ((this._CALAM1 != value))
				{
					this.OnCALAM1Changing(value);
					this.SendPropertyChanging();
					this._CALAM1 = value;
					this.SendPropertyChanged("CALAM1");
					this.OnCALAM1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICHLAMVIEC_CALAM", Storage="_LICHLAMVIEC", ThisKey="MALV", OtherKey="MALV", IsForeignKey=true)]
		public LICHLAMVIEC LICHLAMVIEC
		{
			get
			{
				return this._LICHLAMVIEC.Entity;
			}
			set
			{
				LICHLAMVIEC previousValue = this._LICHLAMVIEC.Entity;
				if (((previousValue != value) 
							|| (this._LICHLAMVIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LICHLAMVIEC.Entity = null;
						previousValue.CALAMs.Remove(this);
					}
					this._LICHLAMVIEC.Entity = value;
					if ((value != null))
					{
						value.CALAMs.Add(this);
						this._MALV = value.MALV;
					}
					else
					{
						this._MALV = default(string);
					}
					this.SendPropertyChanged("LICHLAMVIEC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CALAM", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CALAMs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CALAMs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHAMCONG")]
	public partial class CHAMCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACC;
		
		private System.DateTime _NGAYLV;
		
		private System.TimeSpan _GIOVAO;
		
		private System.Nullable<System.TimeSpan> _GIORA;
		
		private EntitySet<BANGLUONG> _BANGLUONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACCChanging(string value);
    partial void OnMACCChanged();
    partial void OnNGAYLVChanging(System.DateTime value);
    partial void OnNGAYLVChanged();
    partial void OnGIOVAOChanging(System.TimeSpan value);
    partial void OnGIOVAOChanged();
    partial void OnGIORAChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGIORAChanged();
    #endregion
		
		public CHAMCONG()
		{
			this._BANGLUONGs = new EntitySet<BANGLUONG>(new Action<BANGLUONG>(this.attach_BANGLUONGs), new Action<BANGLUONG>(this.detach_BANGLUONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACC
		{
			get
			{
				return this._MACC;
			}
			set
			{
				if ((this._MACC != value))
				{
					this.OnMACCChanging(value);
					this.SendPropertyChanging();
					this._MACC = value;
					this.SendPropertyChanged("MACC");
					this.OnMACCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLV", DbType="Date NOT NULL")]
		public System.DateTime NGAYLV
		{
			get
			{
				return this._NGAYLV;
			}
			set
			{
				if ((this._NGAYLV != value))
				{
					this.OnNGAYLVChanging(value);
					this.SendPropertyChanging();
					this._NGAYLV = value;
					this.SendPropertyChanged("NGAYLV");
					this.OnNGAYLVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOVAO", DbType="Time NOT NULL")]
		public System.TimeSpan GIOVAO
		{
			get
			{
				return this._GIOVAO;
			}
			set
			{
				if ((this._GIOVAO != value))
				{
					this.OnGIOVAOChanging(value);
					this.SendPropertyChanging();
					this._GIOVAO = value;
					this.SendPropertyChanged("GIOVAO");
					this.OnGIOVAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIORA", DbType="Time")]
		public System.Nullable<System.TimeSpan> GIORA
		{
			get
			{
				return this._GIORA;
			}
			set
			{
				if ((this._GIORA != value))
				{
					this.OnGIORAChanging(value);
					this.SendPropertyChanging();
					this._GIORA = value;
					this.SendPropertyChanged("GIORA");
					this.OnGIORAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHAMCONG_BANGLUONG", Storage="_BANGLUONGs", ThisKey="MACC", OtherKey="MACC")]
		public EntitySet<BANGLUONG> BANGLUONGs
		{
			get
			{
				return this._BANGLUONGs;
			}
			set
			{
				this._BANGLUONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BANGLUONGs(BANGLUONG entity)
		{
			this.SendPropertyChanging();
			entity.CHAMCONG = this;
		}
		
		private void detach_BANGLUONGs(BANGLUONG entity)
		{
			this.SendPropertyChanging();
			entity.CHAMCONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACV;
		
		private string _TENCV;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACVChanging(string value);
    partial void OnMACVChanged();
    partial void OnTENCVChanging(string value);
    partial void OnTENCVChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACV
		{
			get
			{
				return this._MACV;
			}
			set
			{
				if ((this._MACV != value))
				{
					this.OnMACVChanging(value);
					this.SendPropertyChanging();
					this._MACV = value;
					this.SendPropertyChanged("MACV");
					this.OnMACVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCV", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENCV
		{
			get
			{
				return this._TENCV;
			}
			set
			{
				if ((this._TENCV != value))
				{
					this.OnTENCVChanging(value);
					this.SendPropertyChanging();
					this._TENCV = value;
					this.SendPropertyChanged("TENCV");
					this.OnTENCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", ThisKey="MACV", OtherKey="MACHUCVU")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHSAN")]
	public partial class KHACHSAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKS;
		
		private string _ADMINID;
		
		private string _TENKS;
		
		private string _DIADIEM;
		
		private string _DANHGIA;
		
		private string _SDT;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<PHONG> _PHONGs;
		
		private EntitySet<DATPHONG> _DATPHONGs;
		
		private EntityRef<ADMINK> _ADMINK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKSChanging(string value);
    partial void OnMAKSChanged();
    partial void OnADMINIDChanging(string value);
    partial void OnADMINIDChanged();
    partial void OnTENKSChanging(string value);
    partial void OnTENKSChanged();
    partial void OnDIADIEMChanging(string value);
    partial void OnDIADIEMChanged();
    partial void OnDANHGIAChanging(string value);
    partial void OnDANHGIAChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KHACHSAN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._PHONGs = new EntitySet<PHONG>(new Action<PHONG>(this.attach_PHONGs), new Action<PHONG>(this.detach_PHONGs));
			this._DATPHONGs = new EntitySet<DATPHONG>(new Action<DATPHONG>(this.attach_DATPHONGs), new Action<DATPHONG>(this.detach_DATPHONGs));
			this._ADMINK = default(EntityRef<ADMINK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKS
		{
			get
			{
				return this._MAKS;
			}
			set
			{
				if ((this._MAKS != value))
				{
					this.OnMAKSChanging(value);
					this.SendPropertyChanging();
					this._MAKS = value;
					this.SendPropertyChanged("MAKS");
					this.OnMAKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADMINID", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ADMINID
		{
			get
			{
				return this._ADMINID;
			}
			set
			{
				if ((this._ADMINID != value))
				{
					if (this._ADMINK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADMINIDChanging(value);
					this.SendPropertyChanging();
					this._ADMINID = value;
					this.SendPropertyChanged("ADMINID");
					this.OnADMINIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKS", DbType="NVarChar(100)")]
		public string TENKS
		{
			get
			{
				return this._TENKS;
			}
			set
			{
				if ((this._TENKS != value))
				{
					this.OnTENKSChanging(value);
					this.SendPropertyChanging();
					this._TENKS = value;
					this.SendPropertyChanged("TENKS");
					this.OnTENKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIADIEM", DbType="NVarChar(100)")]
		public string DIADIEM
		{
			get
			{
				return this._DIADIEM;
			}
			set
			{
				if ((this._DIADIEM != value))
				{
					this.OnDIADIEMChanging(value);
					this.SendPropertyChanging();
					this._DIADIEM = value;
					this.SendPropertyChanged("DIADIEM");
					this.OnDIADIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DANHGIA", DbType="NVarChar(20)")]
		public string DANHGIA
		{
			get
			{
				return this._DANHGIA;
			}
			set
			{
				if ((this._DANHGIA != value))
				{
					this.OnDANHGIAChanging(value);
					this.SendPropertyChanging();
					this._DANHGIA = value;
					this.SendPropertyChanged("DANHGIA");
					this.OnDANHGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MAKS", OtherKey="MAKS")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_PHONG", Storage="_PHONGs", ThisKey="MAKS", OtherKey="MAKS")]
		public EntitySet<PHONG> PHONGs
		{
			get
			{
				return this._PHONGs;
			}
			set
			{
				this._PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_DATPHONG", Storage="_DATPHONGs", ThisKey="MAKS", OtherKey="MAKS")]
		public EntitySet<DATPHONG> DATPHONGs
		{
			get
			{
				return this._DATPHONGs;
			}
			set
			{
				this._DATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADMINK_KHACHSAN", Storage="_ADMINK", ThisKey="ADMINID", OtherKey="ADMINID", IsForeignKey=true)]
		public ADMINK ADMINK
		{
			get
			{
				return this._ADMINK.Entity;
			}
			set
			{
				ADMINK previousValue = this._ADMINK.Entity;
				if (((previousValue != value) 
							|| (this._ADMINK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADMINK.Entity = null;
						previousValue.KHACHSANs.Remove(this);
					}
					this._ADMINK.Entity = value;
					if ((value != null))
					{
						value.KHACHSANs.Add(this);
						this._ADMINID = value.ADMINID;
					}
					else
					{
						this._ADMINID = default(string);
					}
					this.SendPropertyChanged("ADMINK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = null;
		}
		
		private void attach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = this;
		}
		
		private void detach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = null;
		}
		
		private void attach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = this;
		}
		
		private void detach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LICHLAMVIEC")]
	public partial class LICHLAMVIEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALV;
		
		private System.Nullable<System.DateTime> _NGAYLV;
		
		private string _DIADIEM;
		
		private System.Nullable<System.TimeSpan> _TGBATDAU;
		
		private System.Nullable<System.TimeSpan> _TGKETTHUC;
		
		private EntitySet<CALAM> _CALAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALVChanging(string value);
    partial void OnMALVChanged();
    partial void OnNGAYLVChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLVChanged();
    partial void OnDIADIEMChanging(string value);
    partial void OnDIADIEMChanged();
    partial void OnTGBATDAUChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTGBATDAUChanged();
    partial void OnTGKETTHUCChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTGKETTHUCChanged();
    #endregion
		
		public LICHLAMVIEC()
		{
			this._CALAMs = new EntitySet<CALAM>(new Action<CALAM>(this.attach_CALAMs), new Action<CALAM>(this.detach_CALAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALV
		{
			get
			{
				return this._MALV;
			}
			set
			{
				if ((this._MALV != value))
				{
					this.OnMALVChanging(value);
					this.SendPropertyChanging();
					this._MALV = value;
					this.SendPropertyChanged("MALV");
					this.OnMALVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLV", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLV
		{
			get
			{
				return this._NGAYLV;
			}
			set
			{
				if ((this._NGAYLV != value))
				{
					this.OnNGAYLVChanging(value);
					this.SendPropertyChanging();
					this._NGAYLV = value;
					this.SendPropertyChanged("NGAYLV");
					this.OnNGAYLVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIADIEM", DbType="NVarChar(100)")]
		public string DIADIEM
		{
			get
			{
				return this._DIADIEM;
			}
			set
			{
				if ((this._DIADIEM != value))
				{
					this.OnDIADIEMChanging(value);
					this.SendPropertyChanging();
					this._DIADIEM = value;
					this.SendPropertyChanged("DIADIEM");
					this.OnDIADIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGBATDAU", DbType="Time")]
		public System.Nullable<System.TimeSpan> TGBATDAU
		{
			get
			{
				return this._TGBATDAU;
			}
			set
			{
				if ((this._TGBATDAU != value))
				{
					this.OnTGBATDAUChanging(value);
					this.SendPropertyChanging();
					this._TGBATDAU = value;
					this.SendPropertyChanged("TGBATDAU");
					this.OnTGBATDAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGKETTHUC", DbType="Time")]
		public System.Nullable<System.TimeSpan> TGKETTHUC
		{
			get
			{
				return this._TGKETTHUC;
			}
			set
			{
				if ((this._TGKETTHUC != value))
				{
					this.OnTGKETTHUCChanging(value);
					this.SendPropertyChanging();
					this._TGKETTHUC = value;
					this.SendPropertyChanged("TGKETTHUC");
					this.OnTGKETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICHLAMVIEC_CALAM", Storage="_CALAMs", ThisKey="MALV", OtherKey="MALV")]
		public EntitySet<CALAM> CALAMs
		{
			get
			{
				return this._CALAMs;
			}
			set
			{
				this._CALAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CALAMs(CALAM entity)
		{
			this.SendPropertyChanging();
			entity.LICHLAMVIEC = this;
		}
		
		private void detach_CALAMs(CALAM entity)
		{
			this.SendPropertyChanging();
			entity.LICHLAMVIEC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _MAKS;
		
		private string _MACHUCVU;
		
		private System.Data.Linq.Binary _HINHANH;
		
		private string _HONV;
		
		private string _TENNV;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private EntitySet<BANGLUONG> _BANGLUONGs;
		
		private EntitySet<CALAM> _CALAMs;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
		private EntityRef<KHACHSAN> _KHACHSAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMAKSChanging(string value);
    partial void OnMAKSChanged();
    partial void OnMACHUCVUChanging(string value);
    partial void OnMACHUCVUChanged();
    partial void OnHINHANHChanging(System.Data.Linq.Binary value);
    partial void OnHINHANHChanged();
    partial void OnHONVChanging(string value);
    partial void OnHONVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._BANGLUONGs = new EntitySet<BANGLUONG>(new Action<BANGLUONG>(this.attach_BANGLUONGs), new Action<BANGLUONG>(this.detach_BANGLUONGs));
			this._CALAMs = new EntitySet<CALAM>(new Action<CALAM>(this.attach_CALAMs), new Action<CALAM>(this.detach_CALAMs));
			this._CHUCVU = default(EntityRef<CHUCVU>);
			this._KHACHSAN = default(EntityRef<KHACHSAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKS", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MAKS
		{
			get
			{
				return this._MAKS;
			}
			set
			{
				if ((this._MAKS != value))
				{
					if (this._KHACHSAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKSChanging(value);
					this.SendPropertyChanging();
					this._MAKS = value;
					this.SendPropertyChanged("MAKS");
					this.OnMAKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUCVU", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MACHUCVU
		{
			get
			{
				return this._MACHUCVU;
			}
			set
			{
				if ((this._MACHUCVU != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUCVUChanging(value);
					this.SendPropertyChanging();
					this._MACHUCVU = value;
					this.SendPropertyChanged("MACHUCVU");
					this.OnMACHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HONV", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HONV
		{
			get
			{
				return this._HONV;
			}
			set
			{
				if ((this._HONV != value))
				{
					this.OnHONVChanging(value);
					this.SendPropertyChanging();
					this._HONV = value;
					this.SendPropertyChanged("HONV");
					this.OnHONVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(255)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BANGLUONG", Storage="_BANGLUONGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<BANGLUONG> BANGLUONGs
		{
			get
			{
				return this._BANGLUONGs;
			}
			set
			{
				this._BANGLUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CALAM", Storage="_CALAMs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<CALAM> CALAMs
		{
			get
			{
				return this._CALAMs;
			}
			set
			{
				this._CALAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU", ThisKey="MACHUCVU", OtherKey="MACV", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MACHUCVU = value.MACV;
					}
					else
					{
						this._MACHUCVU = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_NHANVIEN", Storage="_KHACHSAN", ThisKey="MAKS", OtherKey="MAKS", IsForeignKey=true)]
		public KHACHSAN KHACHSAN
		{
			get
			{
				return this._KHACHSAN.Entity;
			}
			set
			{
				KHACHSAN previousValue = this._KHACHSAN.Entity;
				if (((previousValue != value) 
							|| (this._KHACHSAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHSAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._KHACHSAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MAKS = value.MAKS;
					}
					else
					{
						this._MAKS = default(string);
					}
					this.SendPropertyChanged("KHACHSAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BANGLUONGs(BANGLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_BANGLUONGs(BANGLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_CALAMs(CALAM entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CALAMs(CALAM entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private string _MAKS;
		
		private string _TENPHONG;
		
		private string _LOAIPHONG;
		
		private double _GIA;
		
		private int _SUCCHUA;
		
		private EntitySet<DATPHONG> _DATPHONGs;
		
		private EntityRef<KHACHSAN> _KHACHSAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnMAKSChanging(string value);
    partial void OnMAKSChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    partial void OnLOAIPHONGChanging(string value);
    partial void OnLOAIPHONGChanged();
    partial void OnGIAChanging(double value);
    partial void OnGIAChanged();
    partial void OnSUCCHUAChanging(int value);
    partial void OnSUCCHUAChanged();
    #endregion
		
		public PHONG()
		{
			this._DATPHONGs = new EntitySet<DATPHONG>(new Action<DATPHONG>(this.attach_DATPHONGs), new Action<DATPHONG>(this.detach_DATPHONGs));
			this._KHACHSAN = default(EntityRef<KHACHSAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKS", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MAKS
		{
			get
			{
				return this._MAKS;
			}
			set
			{
				if ((this._MAKS != value))
				{
					if (this._KHACHSAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKSChanging(value);
					this.SendPropertyChanging();
					this._MAKS = value;
					this.SendPropertyChanged("MAKS");
					this.OnMAKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIPHONG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LOAIPHONG
		{
			get
			{
				return this._LOAIPHONG;
			}
			set
			{
				if ((this._LOAIPHONG != value))
				{
					this.OnLOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._LOAIPHONG = value;
					this.SendPropertyChanged("LOAIPHONG");
					this.OnLOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float NOT NULL")]
		public double GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUCCHUA", DbType="Int NOT NULL")]
		public int SUCCHUA
		{
			get
			{
				return this._SUCCHUA;
			}
			set
			{
				if ((this._SUCCHUA != value))
				{
					this.OnSUCCHUAChanging(value);
					this.SendPropertyChanging();
					this._SUCCHUA = value;
					this.SendPropertyChanged("SUCCHUA");
					this.OnSUCCHUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_DATPHONG", Storage="_DATPHONGs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<DATPHONG> DATPHONGs
		{
			get
			{
				return this._DATPHONGs;
			}
			set
			{
				this._DATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_PHONG", Storage="_KHACHSAN", ThisKey="MAKS", OtherKey="MAKS", IsForeignKey=true)]
		public KHACHSAN KHACHSAN
		{
			get
			{
				return this._KHACHSAN.Entity;
			}
			set
			{
				KHACHSAN previousValue = this._KHACHSAN.Entity;
				if (((previousValue != value) 
							|| (this._KHACHSAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHSAN.Entity = null;
						previousValue.PHONGs.Remove(this);
					}
					this._KHACHSAN.Entity = value;
					if ((value != null))
					{
						value.PHONGs.Add(this);
						this._MAKS = value.MAKS;
					}
					else
					{
						this._MAKS = default(string);
					}
					this.SendPropertyChanged("KHACHSAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _TENKH;
		
		private string _CMND;
		
		private System.Nullable<bool> _GIOITINH;
		
		private string _DIACHI;
		
		private string _EMAIL;
		
		private string _SDT;
		
		private EntitySet<DATPHONG> _DATPHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnGIOITINHChanging(System.Nullable<bool> value);
    partial void OnGIOITINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DATPHONGs = new EntitySet<DATPHONG>(new Action<DATPHONG>(this.attach_DATPHONGs), new Action<DATPHONG>(this.detach_DATPHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Char(12)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="Bit")]
		public System.Nullable<bool> GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(255)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATPHONG", Storage="_DATPHONGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DATPHONG> DATPHONGs
		{
			get
			{
				return this._DATPHONGs;
			}
			set
			{
				this._DATPHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATPHONG")]
	public partial class DATPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKS;
		
		private string _MAKH;
		
		private string _MAPHONG;
		
		private System.Nullable<System.DateTime> _NGAYDATPHONG;
		
		private System.Nullable<System.DateTime> _NGAYTRAPHONG;
		
		private EntityRef<KHACHSAN> _KHACHSAN;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKSChanging(string value);
    partial void OnMAKSChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnNGAYDATPHONGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATPHONGChanged();
    partial void OnNGAYTRAPHONGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTRAPHONGChanged();
    #endregion
		
		public DATPHONG()
		{
			this._KHACHSAN = default(EntityRef<KHACHSAN>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKS
		{
			get
			{
				return this._MAKS;
			}
			set
			{
				if ((this._MAKS != value))
				{
					if (this._KHACHSAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKSChanging(value);
					this.SendPropertyChanging();
					this._MAKS = value;
					this.SendPropertyChanged("MAKS");
					this.OnMAKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDATPHONG", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDATPHONG
		{
			get
			{
				return this._NGAYDATPHONG;
			}
			set
			{
				if ((this._NGAYDATPHONG != value))
				{
					this.OnNGAYDATPHONGChanging(value);
					this.SendPropertyChanging();
					this._NGAYDATPHONG = value;
					this.SendPropertyChanged("NGAYDATPHONG");
					this.OnNGAYDATPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTRAPHONG", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYTRAPHONG
		{
			get
			{
				return this._NGAYTRAPHONG;
			}
			set
			{
				if ((this._NGAYTRAPHONG != value))
				{
					this.OnNGAYTRAPHONGChanging(value);
					this.SendPropertyChanging();
					this._NGAYTRAPHONG = value;
					this.SendPropertyChanged("NGAYTRAPHONG");
					this.OnNGAYTRAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_DATPHONG", Storage="_KHACHSAN", ThisKey="MAKS", OtherKey="MAKS", IsForeignKey=true)]
		public KHACHSAN KHACHSAN
		{
			get
			{
				return this._KHACHSAN.Entity;
			}
			set
			{
				KHACHSAN previousValue = this._KHACHSAN.Entity;
				if (((previousValue != value) 
							|| (this._KHACHSAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHSAN.Entity = null;
						previousValue.DATPHONGs.Remove(this);
					}
					this._KHACHSAN.Entity = value;
					if ((value != null))
					{
						value.DATPHONGs.Add(this);
						this._MAKS = value.MAKS;
					}
					else
					{
						this._MAKS = default(string);
					}
					this.SendPropertyChanged("KHACHSAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATPHONG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DATPHONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DATPHONGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_DATPHONG", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.DATPHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.DATPHONGs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
